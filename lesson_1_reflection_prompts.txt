How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    diff gives the the whole code as output. Reflecting the changes in the 2 versions.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    it makes easy to keep track of changes.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Fill in your answer here

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Fill in your answer here

How can you use the commands git log and git diff to view the history of files?

    git log gives history of commits made. whereas git diff compares 2 files or 2 commits, and pin points the differences.

How might using version control make you more confident to make changes that
could break something?

    Because if i broke up code, i can always go back to the earlier commits using "git checkout <commit id>" . And see the code working, and be able to debug.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
	
	 
Git command review

Compare two commits, printing each line that is present in one commit but not the other.

git diff will do this. It takes two arguments - the two commit ids to compare. 


Make a copy of an entire Git repository, including the history, onto your own computer.

git clone will do this. It takes one argument - the url of the repository to copy. 


Temporarily reset all files in a directory to their state at the time of a specific commit.

git checkout will do this. It takes one argument - the commit ID to restore. 


Show the commits made in this repository, starting with the most recent.

git log will do this. It doesn't take any arguments.
